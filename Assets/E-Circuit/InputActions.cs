//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/E-Circuit/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ae361370-3f46-4d89-b647-13295d4677df"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3ee878df-1cd5-4b09-b1aa-ab4dfdf6ca23"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spawn Diode"",
                    ""type"": ""Button"",
                    ""id"": ""3fd4a865-6e7e-4d40-899c-9c0e7cb0f9b5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spawn Generator"",
                    ""type"": ""Button"",
                    ""id"": ""a8e57edf-975b-4afe-b42f-5fe6aef65702"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spawn LED"",
                    ""type"": ""Button"",
                    ""id"": ""cac8d5b6-9c39-493b-a47d-a607fb1cf1cc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spawn Push Button"",
                    ""type"": ""Button"",
                    ""id"": ""41b24711-1d78-4892-a545-0b27bb15133d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spawn Resistor"",
                    ""type"": ""Button"",
                    ""id"": ""be3092c3-b7d7-4f52-ad78-d370d977187a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""172e212d-bb19-414d-b787-8d8fb05af089"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard And Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f954535-257b-4163-bb63-52893f12c07e"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";AR"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Alt+G"",
                    ""id"": ""e243c53f-c978-43a0-ac89-07bfa8209394"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn Generator"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5b664380-f60e-4dea-afc2-6eda7a679698"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Generator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""e8ec7f25-65ec-44e0-baaf-2247284fb7f4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Generator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Alt+R"",
                    ""id"": ""c2583bf1-1718-402b-938d-2acc45b2a874"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn Resistor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5ec0e04d-e003-40a2-bc75-fd71edb04064"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Resistor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""87d79499-94e3-43e7-8edb-521da22e6b11"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Resistor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Alt+D"",
                    ""id"": ""75e43ba0-f9ba-4b39-869e-526e52b739b0"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn Diode"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""83f14a48-50cf-436e-8ee8-b26c46cce423"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Diode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""fec1b9da-6fdb-4d70-87bd-b9a6debf2feb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Diode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Alt+L"",
                    ""id"": ""edba96b8-f39e-4c61-82d2-ee7f04baa1eb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn LED"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c3b737d7-b953-46b2-b864-5f9c0f88899f"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn LED"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c2f20647-87e4-4f67-b421-a6841ff67496"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn LED"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""7d859196-a89e-4a26-9505-cbd5fe6065c3"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn Push Button"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""40738413-89fc-4190-8984-103497e4e3e1"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Push Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""3ea11f24-646c-4773-ba84-5dedd8f846cf"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard And Mouse"",
                    ""action"": ""Spawn Push Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard And Mouse"",
            ""bindingGroup"": ""Keyboard And Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""AR"",
            ""bindingGroup"": ""AR"",
            ""devices"": [
                {
                    ""devicePath"": ""<HandheldARInputDevice>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_SpawnDiode = m_Player.FindAction("Spawn Diode", throwIfNotFound: true);
        m_Player_SpawnGenerator = m_Player.FindAction("Spawn Generator", throwIfNotFound: true);
        m_Player_SpawnLED = m_Player.FindAction("Spawn LED", throwIfNotFound: true);
        m_Player_SpawnPushButton = m_Player.FindAction("Spawn Push Button", throwIfNotFound: true);
        m_Player_SpawnResistor = m_Player.FindAction("Spawn Resistor", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, InputActions.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_SpawnDiode;
    private readonly InputAction m_Player_SpawnGenerator;
    private readonly InputAction m_Player_SpawnLED;
    private readonly InputAction m_Player_SpawnPushButton;
    private readonly InputAction m_Player_SpawnResistor;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @SpawnDiode => m_Wrapper.m_Player_SpawnDiode;
        public InputAction @SpawnGenerator => m_Wrapper.m_Player_SpawnGenerator;
        public InputAction @SpawnLED => m_Wrapper.m_Player_SpawnLED;
        public InputAction @SpawnPushButton => m_Wrapper.m_Player_SpawnPushButton;
        public InputAction @SpawnResistor => m_Wrapper.m_Player_SpawnResistor;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @SpawnDiode.started += instance.OnSpawnDiode;
            @SpawnDiode.performed += instance.OnSpawnDiode;
            @SpawnDiode.canceled += instance.OnSpawnDiode;
            @SpawnGenerator.started += instance.OnSpawnGenerator;
            @SpawnGenerator.performed += instance.OnSpawnGenerator;
            @SpawnGenerator.canceled += instance.OnSpawnGenerator;
            @SpawnLED.started += instance.OnSpawnLED;
            @SpawnLED.performed += instance.OnSpawnLED;
            @SpawnLED.canceled += instance.OnSpawnLED;
            @SpawnPushButton.started += instance.OnSpawnPushButton;
            @SpawnPushButton.performed += instance.OnSpawnPushButton;
            @SpawnPushButton.canceled += instance.OnSpawnPushButton;
            @SpawnResistor.started += instance.OnSpawnResistor;
            @SpawnResistor.performed += instance.OnSpawnResistor;
            @SpawnResistor.canceled += instance.OnSpawnResistor;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @SpawnDiode.started -= instance.OnSpawnDiode;
            @SpawnDiode.performed -= instance.OnSpawnDiode;
            @SpawnDiode.canceled -= instance.OnSpawnDiode;
            @SpawnGenerator.started -= instance.OnSpawnGenerator;
            @SpawnGenerator.performed -= instance.OnSpawnGenerator;
            @SpawnGenerator.canceled -= instance.OnSpawnGenerator;
            @SpawnLED.started -= instance.OnSpawnLED;
            @SpawnLED.performed -= instance.OnSpawnLED;
            @SpawnLED.canceled -= instance.OnSpawnLED;
            @SpawnPushButton.started -= instance.OnSpawnPushButton;
            @SpawnPushButton.performed -= instance.OnSpawnPushButton;
            @SpawnPushButton.canceled -= instance.OnSpawnPushButton;
            @SpawnResistor.started -= instance.OnSpawnResistor;
            @SpawnResistor.performed -= instance.OnSpawnResistor;
            @SpawnResistor.canceled -= instance.OnSpawnResistor;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard And Mouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    private int m_ARSchemeIndex = -1;
    public InputControlScheme ARScheme
    {
        get
        {
            if (m_ARSchemeIndex == -1) m_ARSchemeIndex = asset.FindControlSchemeIndex("AR");
            return asset.controlSchemes[m_ARSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnSpawnDiode(InputAction.CallbackContext context);
        void OnSpawnGenerator(InputAction.CallbackContext context);
        void OnSpawnLED(InputAction.CallbackContext context);
        void OnSpawnPushButton(InputAction.CallbackContext context);
        void OnSpawnResistor(InputAction.CallbackContext context);
    }
}
